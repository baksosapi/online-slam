import math

import numpy as np


class ProbabilityMap(object):

    def __init__(self, regions, width=28, height=19):
        self.map = np.zeros((height, width), dtype=np.float32)
        for row, column in regions:
            self.map[row][column] = 1.0 / len(regions)

        self.regions = regions

    def normalize(self):
        total = np.sum(self.map)
        for (x, y), probability in np.ndenumerate(self.map):
            self.map[x][y] = probability / float(total)


CENTER_LINE_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(5, 9), (6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]),
    '90': ProbabilityMap(regions=[(15, 11), (15, 12), (15, 13), (15, 14), (15, 15), (15, 16)]),
    '180': ProbabilityMap(regions=[(5, 18), (6, 18), (7, 18), (8, 18), (9, 18), (10, 18), (11, 18), (12, 18), (13, 18)]),
    '270': ProbabilityMap(regions=[(3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 16)])
}

BOUNDARY_T_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(0, 9), (1, 9), (17, 9), (18, 9), (1, 22), (2, 22), (3, 22), (4, 22), (5, 22), (13, 22), (14, 22), (15, 22), (16, 22), (17, 22)]),
    '90': ProbabilityMap(regions=[(8, 0), (8, 1), (8, 2), (5, 11), (5, 12), (5, 13), (5, 14), (5, 15), (5, 16), (8, 25), (8, 26), (8, 27)]),
    '180': ProbabilityMap(regions=[(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (13, 5), (14, 5), (15, 5), (16, 5), (17, 5), (0, 18), (1, 18), (17, 18), (18, 18)]),
    '270': ProbabilityMap(regions=[(10, 0), (10, 1), (10, 2), (13, 11), (13, 12), (13, 13), (13, 14), (13, 15), (13, 16), (10, 25), (10, 26), (10, 27)])
}

BOUNDARY_L_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(0, 22), (1, 22), (2, 22), (16, 22), (17, 22), (18, 22)]),
    '90': ProbabilityMap(regions=[(5, 0), (5, 1), (5, 2), (5, 25), (5, 26), (5, 27)]),
    '180': ProbabilityMap(regions=[(0, 5), (1, 5), (2, 5), (16, 5), (17, 5), (18, 5)]),
    '270': ProbabilityMap(regions=[(13, 0), (13, 1), (13, 2), (13, 25), (13, 26), (13, 27)])
}

GOAL_L_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(1, 19), (2, 19), (3, 19), (4, 19), (5, 19), (13, 19), (14, 19), (15, 19), (16, 19), (17, 19)]),
    '90': ProbabilityMap(regions=[(8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 22), (8, 23), (8, 25), (8, 26), (8, 27)]),
    '180': ProbabilityMap(regions=[(1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8)]),
    '270': ProbabilityMap(regions=[(10, 1), (10, 2), (10, 3), (10, 4), (10, 5), (10, 22), (10, 23), (10, 25), (10, 26), (10, 27)])
}

BOUNDARY_L_GOAL_L_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(2, 22), (3, 22), (4, 22), (14, 22), (15, 22), (16, 22)]),
    '90': ProbabilityMap(regions=[(5, 2), (5, 3), (5, 4), (5, 23), (5, 24), (5, 25)]),
    '180': ProbabilityMap(regions=[(2, 5), (3, 5), (4, 5), (14, 5), (15, 5), (16, 5)]),
    '270': ProbabilityMap(regions=[(13, 2), (13, 3), (13, 4), (13, 23), (13, 24), (13, 25)])
}

PARALLEL_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(5, 22), (6, 22), (7, 22), (8, 22), (9, 22), (10, 22), (11, 22), (12, 22), (13, 22)]),
    '90': ProbabilityMap(regions=[]),
    '180': ProbabilityMap(regions=[(5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)]),
    '270': ProbabilityMap(regions=[])
}

BOUNDARY_T_GOAL_L_FEATURE_PROBABILITY_MAP = {
    '0': ProbabilityMap(regions=[(2, 22), (3, 22), (4, 22), (14, 22), (15, 22), (16, 22)]),
    '90': ProbabilityMap(regions=[(7, 1), (7, 2), (7, 25), (7, 26)]),
    '180': ProbabilityMap(regions=[(2, 5), (3, 5), (4, 5), (14, 5), (15, 5), (16, 5)]),
    '270': ProbabilityMap(regions=[(11, 1), (11, 2), (11, 25), (11, 26)])
}


# Zeros template
# ProbabilityMap(map=np.array([
#     #  0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 0
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 1
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 2
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 3
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 4
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 5
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 6
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 7
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 8
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 9
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 10
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 11
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 12
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 13
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 14
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 15
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 16
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],   # 17
#     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]    # 18
# ])